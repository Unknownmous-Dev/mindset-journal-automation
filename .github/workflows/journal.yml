name: Daily Mindset Journal
on:
  schedule:
    - cron: '0 8 * * *'  # Runs daily at 8 AM UTC
  workflow_dispatch:     # Allows manual triggering

jobs:
  publish-journal:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: pip install requests fpdf
      
    - name: Generate and publish journal
      env:
        HF_TOKEN: ${{ secrets.HF_TOKEN }}
        GUMROAD_TOKEN: ${{ secrets.GUMROAD_TOKEN }}
      run: |
        cat << 'EOF' > journal_automation.py
        import os
        import requests
        import datetime
        from fpdf import FPDF
        
        # Configuration
        DATE = datetime.datetime.now().strftime("%Y-%m-%d")
        PDF_FILE = f"Daily_Mindset_Journal_{DATE}.pdf"
        
        # 1. Generate Journal Content
        print("üöÄ Generating journal content...")
        hf_response = requests.post(
            "https://api-inference.huggingface.co/models/mistralai/Mixtral-8x7B-Instruct-v0.1",
            headers={"Authorization": f"Bearer {os.environ['HF_TOKEN']}"},
            json={
                "inputs": f"""
                Create a premium mindset journal for {DATE} with:
                1. Powerful 5-word title
                2. 3 motivational paragraphs
                3. 5 affirmations
                4. 1 inspirational quote with author
                5. 3 reflection prompts
                6. 5-item gratitude list
                
                Format in Markdown:
                # [TITLE]
                [BODY]
                ## Affirmations
                - ...
                ## Quote
                > ...
                ## Reflection
                1. ...
                ## Gratitude
                - ...
                """,
                "parameters": {
                    "max_new_tokens": 1200,
                    "temperature": 0.7,
                    "return_full_text": False
                }
            }
        )
        
        if hf_response.status_code != 200:
            raise Exception(f"ü§ñ AI Error: {hf_response.text}")
            
        journal_content = hf_response.json()[0]['generated_text']
        print("‚úÖ Journal content generated!")
        
        # 2. Create PDF
        print("üìÑ Creating PDF...")
        pdf = FPDF()
        pdf.add_page()
        pdf.set_font("Arial", size=12)
        
        # Header
        pdf.set_font("Arial", 'B', 16)
        pdf.cell(200, 10, txt=f"Daily Mindset Journal - {DATE}", ln=True, align='C')
        pdf.ln(15)
        
        # Content
        pdf.set_font("Arial", size=12)
        for line in journal_content.split('\n'):
            if line.startswith("# "):
                pdf.set_font("Arial", 'B', 20)
                pdf.cell(0, 10, line[2:], ln=True)
            elif line.startswith("## "):
                pdf.set_font("Arial", 'B', 16)
                pdf.cell(0, 10, line[3:], ln=True)
            elif line.startswith(">"):
                pdf.set_font("Arial", 'I', 12)
                pdf.multi_cell(0, 8, line[1:].strip())
            else:
                pdf.set_font("Arial", size=12)
                pdf.multi_cell(0, 8, line)
            pdf.ln(3)
        
        # Footer
        pdf.set_y(-15)
        pdf.set_font("Arial", 'I', 8)
        pdf.cell(0, 10, "Created by Unknownmous", align='C')
        
        pdf.output(PDF_FILE)
        print(f"‚úÖ PDF saved as {PDF_FILE}")
        
        # 3. Upload to Gumroad
        print("üõí Uploading to Gumroad...")
        with open(PDF_FILE, "rb") as f:
            gumroad_response = requests.post(
                "https://api.gumroad.com/v2/products",
                files={"file": (PDF_FILE, f)},
                data={
                    "name": f"Daily Mindset Journal - {DATE}",
                    "description": "Premium mindset journal to elevate your thinking. Created by Unknownmous.",
                    "published": "true",
                    "make_discoverable": "true"
                },
                auth=(os.environ['GUMROAD_TOKEN'], '')
            )
        
        # Debugging
        print(f"Gumroad Status: {gumroad_response.status_code}")
        print(f"Response: {gumroad_response.text[:200]}...")
        
        if gumroad_response.status_code == 200:
            product_url = gumroad_response.json().get('product', {}).get('url', 'Unknown URL')
            print(f"üéâ Success! Published at: {product_url}")
        else:
            raise Exception(f"‚ùå Gumroad upload failed: {gumroad_response.text}")
        EOF
        
        python journal_automation.py
